---
# keycloak tasks for camac

- name: load customer specific variables
  ansible.builtin.include_vars:
    file: "{{ camac_customer_variables }}"
  when: camac_customer_variables != ""

- name: create system user account for keycloak
  ansible.builtin.user:
    name: wildfly
    state: present
    system: yes

- name: create dirs for keycloak installation
  ansible.builtin.file:
    state: directory
    path: "{{ item.path }}"
    owner: "{{ item.owner | d('root') }}"
  with_items:
    - path: "{{ camac_keycloak_releasedir }}"
      owner: "{{ camac_keycloak_user }}"
    - path: "{{ camac_keycloak_wildfly_confdir }}"
    - path: "{{ camac_keycloak_appdir }}/standalone/configuration/standalone_xml_history"
      owner: "{{ camac_keycloak_user }}"
    - path: "{{ camac_keycloak_bindir }}"
    - path: "{{ camac_keycloak_logdir }}"
      owner: "{{ camac_keycloak_user }}"
    - path: "{{ camac_keycloak_datadir }}"
      owner: "{{ camac_keycloak_user }}"
    - path: "{{ camac_keycloak_tmpdir }}"
      owner: "{{ camac_keycloak_user }}"

- name: download keycloak artifacts
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    checksum: "sha256:{{ item.checksum }}"
  with_items:
    - url: "{{ camac_keycloak_release }}"
      dest: "{{ camac_keycloak_tarball }}"
      checksum: "{{ camac_keycloak_tarball_checksum }}"
    - url: "{{ camac_keycloak_theme_release }}"
      dest: "{{ camac_keycloak_theme_jarfile }}"
      checksum: "{{ camac_keycloak_theme_jarfile_checksum }}"
    - url: "{{ camac_keycloak_postgres_jdbc_release }}"
      dest: "{{ camac_keycloak_postgres_jdbc_jarfile }}"
      checksum: "{{ camac_keycloak_postgres_jdbc_jarfile_checksum }}"

- name: unpack keycloak tarball
  ansible.builtin.unarchive:
    src: "{{ camac_keycloak_tarball }}"
    dest: "{{ camac_keycloak_releasedir }}"
    remote_src: "{{ camac_keycloak_unarchive_remote_src }}"

- name: copy keycloak release to it's final location
  ansible.posix.synchronize:
    src: "{{ camac_keycloak_releasedir }}/keycloak-{{ camac_keycloak_version }}/"
    dest: "{{ camac_keycloak_appdir }}"
    delete: yes
  delegate_to: "{{ inventory_hostname }}"

- name: allow wildfly access to properties
  ansible.builtin.file:
    path: "{{ camac_keycloak_appdir }}/standalone/{{ item }}"
    owner: "{{ camac_keycloak_user }}"
  with_items:
    - configuration/application-roles.properties
    - configuration/application-users.properties
    - configuration/logging.properties
    - configuration/mgmt-groups.properties
    - configuration/mgmt-users.properties
    - configuration/standalone.xml
    - deployments

- name: create config history directory for wildfly
  ansible.builtin.file:
    state: directory
    path: "{{ camac_keycloak_appdir }}/standalone/configuration/standalone_xml_history"
    owner: "{{ camac_keycloak_user }}"

- name: copy systemd units for keycloak
  ansible.builtin.copy:
    src: "{{ camac_keycloak_releasedir }}/keycloak-{{ camac_keycloak_version }}/docs/contrib/scripts/systemd/{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: "{{ camac_keycloak_systemd_units_remote_src | d(true) }}"
  with_items:
    - src: wildfly.service
      dest: /etc/systemd/system/wildfly.service
    - src: wildfly.conf
      dest: "{{ camac_keycloak_wildfly_confdir }}/wildfly.conf"
    - src: launch.sh
      dest: "{{ camac_keycloak_bindir }}/launch.sh"

- name: adapt launch script
  ansible.builtin.lineinfile:
    dest: "{{ camac_keycloak_bindir }}/launch.sh"
    regexp: '^    \$WILDFLY_HOME/bin/standalone.sh -c \$2 -b \$3'
    line: "    $WILDFLY_HOME/bin/standalone.sh -c $2 -b $3 -Djboss.server.data.dir={{ camac_keycloak_datadir }} -Djboss.server.log.dir={{ camac_keycloak_logdir }} -Djboss.server.temp.dir={{ camac_keycloak_tmpdir }}"

- name: configure wildfly config dir
  ansible.builtin.lineinfile:
    dest: "{{ camac_keycloak_wildfly_confdir }}/wildfly.conf"
    regexp: "^{{ item.var }}="
    line: "{{ item.var }}={{ item.value }}"
  with_items:
    - var: WILDFLY_HOME
      value: "{{ camac_keycloak_appdir }}"
    - var: JAVA_HOME
      value: "{{ camac_keycloak_java_home | d() }}"

- name: adapt systemd unit
  ansible.builtin.lineinfile:
    dest: "/etc/systemd/system/wildfly.service"
    state: "{{ item.state | d('present') }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line | d() }}"
  with_items:
    - regexp: "^EnvironmentFile=-"
      line: "EnvironmentFile=-{{ camac_keycloak_wildfly_confdir }}/wildfly.conf"
    - regexp: "^ExecStart="
      line: "ExecStart=/bin/bash {{ camac_keycloak_bindir }}/launch.sh $WILDFLY_MODE $WILDFLY_CONFIG $WILDFLY_BIND"
    - regexp: "^StandardOutput="
      state: "absent"
    - regexp: "^User="
      line: "User={{ camac_keycloak_user }}"

- name: configure undertow
  community.general.xml:
    path: "{{ camac_keycloak_appdir }}/standalone/configuration/standalone.xml"
    namespaces:
      domain: "urn:jboss:domain:19.0"
      undertow: "urn:jboss:domain:undertow:12.0"
    xpath: "/domain:server/domain:profile/undertow:subsystem/undertow:server/undertow:http-listener"
    attribute: "undertow:proxy-address-forwarding"
    value: "true"

- name: create admin user
  ansible.builtin.command: "{{ camac_keycloak_appdir }}/bin/add-user-keycloak.sh  --user {{ camac_keycloak_admin_user }} --password {{ camac_keycloak_admin_password }}"
  args:
    creates: "{{ camac_keycloak_appdir }}/standalone/configuration/keycloak-add-user.json"
  environment:
    JAVA_HOME: "{{ camac_keycloak_java_home | d() }}"
  when: camac_keycloak_create_admin_user

- name: install keycloak theme
  ansible.builtin.command: "{{ camac_keycloak_appdir }}/bin/jboss-cli.sh --command='module add --name=ch.linkyard.ebau.be.theme.keycloak-theme-ebau-be --resources={{ camac_keycloak_theme_jarfile }}'"
  args:
    creates: "{{ camac_keycloak_appdir }}/modules/ch/linkyard/ebau/be/theme/keycloak-theme-ebau-be/main/module.xml"
  environment:
    JAVA_HOME: "{{ camac_keycloak_java_home | d() }}"

- name: configure keycloak theme modules
  community.general.xml:
    path: "{{ camac_keycloak_appdir }}/standalone/configuration/standalone.xml"
    namespaces:
      domain: "urn:jboss:domain:5.0"
      keycloak-server: "urn:jboss:domain:keycloak-server:1.1"
    xpath: "/domain:server/domain:profile/keycloak-server:subsystem/keycloak-server:theme"
    add_children:
      - modules: ""

- name: install keycloak postgres jdbc driver
  ansible.builtin.command: "{{ camac_keycloak_appdir }}/bin/jboss-cli.sh --command='module add --name=org.postgresql --dependencies=javax.api,javax.transaction.api --resources={{ camac_keycloak_postgres_jdbc_jarfile }}'"
  args:
    creates: "{{ camac_keycloak_appdir }}/modules/org/postgresql/main/module.xml"
  environment:
    JAVA_HOME: "{{ camac_keycloak_java_home | d() }}"
  when: camac_keycloak_use_postgres

- name: configure keycloak
  ansible.builtin.template:
    src: standalone.xml.j2
    dest: "{{ camac_keycloak_appdir }}/standalone/configuration/standalone.xml"
  notify:
    - restart wildfly

# the following is it's own task since ansible is being petty and assuming
# items from with_items to be unicode string which leads to lxml breakage
# please stop assuming my codepage ansible
- name: configure keycloak theme modules/module
  community.general.xml:
    path: "{{ camac_keycloak_appdir }}/standalone/configuration/standalone.xml"
    namespaces:
      domain: "urn:jboss:domain:5.0"
      keycloak-server: "urn:jboss:domain:keycloak-server:1.1"
    xpath: "/domain:server/domain:profile/keycloak-server:subsystem/keycloak-server:theme/keycloak-server:modules"
    set_children:
      - module: "ch.linkyard.ebau.be.theme.keycloak-theme-ebau-be"
  notify:
    - restart wildfly

- name: export keycloak database
  ansible.builtin.shell: "{{ camac_keycloak_appdir }}/bin/standalone.sh -Dkeycloak.migration.action=export -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file={{ camac_keycloak_datadir }}/keycloak-export-{{ ansible_date_time.iso8601 }}.json -Djboss.http.port=8888 -Djboss.https.port=9999 -Djboss.management.http.port=7777"
  async: 180
  poll: 0
  ignore_errors: yes
  when: camac_keycloak_use_postgres == false

- name: Check if we need to start and enable keycloak
  ansible.builtin.set_fact:
    camac_keycloak_systemd_state: "started"
    camac_keycloak_systemd_enabled: True
  when: camac_master

- name: Check if we need to stop and disable keycloak
  ansible.builtin.set_fact:
    camac_keycloak_systemd_state: "stopped"
    camac_keycloak_systemd_enabled: False
  when: not camac_master

- name: enable and start wildfly systemd unit for keycloak
  ansible.builtin.systemd:
    name: wildfly
    state: "{{ camac_keycloak_systemd_state }}"
    enabled: "{{ camac_keycloak_systemd_enabled }}"
