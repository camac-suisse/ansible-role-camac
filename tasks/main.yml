---
- name: stop apache service
  ansible.builtin.service:
    name: "{{ apache_service_name }}"
    state: stopped
  # Always trigger the start apache service handler, even if that service was
  # already stopped at this point
  changed_when: true
  notify:
    - start apache service

- name: load customer specific variables
  ansible.builtin.include_vars:
    file: "{{ camac_customer_variables }}"
  when: camac_customer_variables != ""

- ansible.builtin.include_tasks: keycloak.yml
  when: camac_keycloak_enable

- name: create download dir for releases
  ansible.builtin.file:
    state: directory
    path: "{{ camac_releasedir }}/camac"

- name: create tarball dir
  ansible.builtin.file:
    state: directory
    path: "{{ camac_tarballdir }}"

- name: download camac release tarball
  ansible.builtin.get_url:
    url: "{{ camac_release }}"
    dest: "{{ camac_tarball }}"
    checksum: "{% if camac_tarball_checksum %}sha256:{{ camac_tarball_checksum }}{% endif %}"

- name: unpack camac tarball
  ansible.builtin.unarchive:
    src: "{{ camac_tarball }}"
    dest: "{{ camac_releasedir }}/camac"
    remote_src: yes

- name: delete camac release tarballs
  ansible.builtin.file:
    state: absent
    dest: "{{ camac_tarballdir }}"

- ansible.builtin.include_tasks: php.yml

- ansible.builtin.include_tasks: python.yml
  tags: python

- ansible.builtin.include_tasks: ember.yml
  tags: ember

- ansible.builtin.include_tasks: document_merge_service.yml
  tags: document_merge_service

- name: clear cache
  ansible.builtin.command: "php {{ camac_php_docroot }}/cronjob/clear-cache.php"
  tags:
    - cache

- name: remove tmp staging dir
  ansible.builtin.file:
    state: absent
    dest: "{{ camac_releasedir }}/camac/"
